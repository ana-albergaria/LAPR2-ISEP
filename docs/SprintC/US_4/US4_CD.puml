@startuml
skinparam classAttributeIconSize 0
left to right direction


package UI <<Folder>> {
  class CreateTestUI{
  }
}


package Domain <<Folder>> {
    package Model <<Folder>> {

        class TestType {
        - code : String
        - description : String
        - collectingMethod : String
        }

        class Test{
            - NHSCode: String
            - code: String
        }

        class Sample{
            - barCode
        }

        class Parameter {
          -code
          -shortName
          -description
        }

        class Company {
            -designation : String
            +getTestTypeStore()
            +getParameterStore()
            +getTestStore()
        }

        class ParameterCategory{
            -code
            -name
        }

    }
    package Stores <<Folder>> {
        class ParameterStore {
            +getParameterCategoriesStore()
            +getCategoriesByCode(List<String> ParameterCodes)
            +getCategoryByCode(String code)
            +getParamsByCategories(List<String> selectedCategoriesCodes)
            +getParamsByCategory(String category)
        }

        class TestTypeStore {
               +getTestTypes()
               +getTestTypeByCode(String code)
               +getCategoriesByTestTypeCode(String selectedTestTypeCode)
            }

        class TestStore {
            +createTest(String NHScode, Client associatedClient,\n TestType selectedTestType, List<Parameter>selectedParamsList)
            +validateTest(test)
            +saveTest(test)
        }

    }
}

package Controller <<Folder>>{
    class CreateTestControler{
    +createTest(NHScode, citizenCardNumber,selectedTestTypeCode, selectedParamCodes)
    +saveTest(test)
    +getTestTypes() : TestTypeDTO
    +getCategoriesListOfTestType(selectedTestTypeCode): CategoriesDTO
    +getParametersOfCategories(selectedCategoriesCodes): ParametersDTO
    }
}

package DTO <<Folder>>{
    class TestTypeDTO {
    -code
    -description
    -collectingMethod
    -List<Category> selectedCategories
    +TestTypeDTO(code, description, collectingMethod, selectedCategories)
    }

    class CategoryDto {
    -code
    -name
    +CategoryDto(code, name)
    }

    class ParameterDTO {
    -code
    -shortName
    -description
    -ParameterCategory
    +ParameterDTO(code, shortName, description, ParameterCategory)'
    }

}

package Mappers <<Folder>>{
    class TestTypeMapper {
        +List<TestTypeDTO> toDTO(List<TestType> testTypes)
        +TestTypeDTO toDTO(TestType tt)
    }
    class CategoryMapper{
        +List<CategoryDto> toDTO(List<Category> parameterCategories)
        +CategoryDto toDTO(Category category)
    }
    class ParameterMapper {
        +List<ParameterDTO> toDTO(List<Parameter> parameters)
        +ParameterDTO toDTO(Parameter parameter)
    }

}



CreateTestUI ..> CreateTestControler
CreateTestUI ..> CategoryDto
CreateTestUI ..> ParameterDTO
CreateTestUI ..> TestTypeDTO
CategoryMapper ..> CategoryDto
CategoryMapper ..> ParameterCategory
ParameterMapper ..> ParameterDTO
ParameterMapper ..> Parameter
TestTypeMapper ..> TestTypeDTO
TestTypeMapper ..> TestType
CreateTestControler ..> Company
CreateTestControler ..> CategoryMapper
CreateTestControler ..> CategoryDto
CreateTestControler ..> ParameterMapper
CreateTestControler ..> ParameterDTO
CreateTestControler ..> TestTypeMapper
CreateTestControler ..> TestTypeDTO
CreateTestControler ..> ParameterStore
CreateTestControler ..> TestTypeStore
CreateTestControler ..> TestStore
TestTypeStore "1" -- "*" TestType : stores >
TestStore "1" -- "*" Test : stores >
ParameterStore "1" -- "*" Parameter : stores >
Company "1" -- "1" ParameterStore : uses >
Company "1" -- "1" TestTypeStore : uses >
Company "1" -- "1" TestStore : uses >
TestType "1" -- "1..*" Parameter : characterized by >
Company "1" -- "*" TestType : conducts >
Company "1" -- "*" Test : conducts >
Company "1" -- "*" Parameter : capable of analysing >
Test "*" -- "1" TestType : classified as >
Test "*" -- "1..*" Parameter : requested analysis of >
Test "1" -- "1..*" Sample : collects >
Parameter "*" -- "1" ParameterCategory: presented under >
TestType "1" -- "1..*" ParameterCategory : characterized by >


@enduml