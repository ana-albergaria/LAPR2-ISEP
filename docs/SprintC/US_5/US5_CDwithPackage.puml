@startuml

skinparam classAttributeIconSize 0
left to right direction
hide empty methods
hide empty attributes

package UI {
class RecordSamplesUI
}

package Core {


package Controller {
class RecordSamplesController
}

package Domain {

package Model {
class Company
class Test
class Sample
class Barcode
}

package Stores {
class TestStore
class SampleStore
}

}

package Mappers {
class TestMapper
}

package DTO {
class TestDto
}

package Interfaces {
class ExternalAPI
}

package Adapters {
class BarbecueAdapter
}

package APIs {
class BarbecueAPI
}

}

class RecordSamplesUI {}

class RecordSamplesController {
+getTestsNoSamples()
+createSample()
+saveSample()
+addSample(code)
}

class Company {
-designation
+getTestStore()
+getSampleStore()
}

class TestStore {
+getTestsWithNoSamples()
}

class TestMapper {
+List<TestDto> toDTO(List<Test> tests)
+TestDto toDTO(Test t)
}

class TestDto {
- code
- nhsCode
- createdAt
+TestDto(code, NhsCode, createdAt)
+getCode()
+getNhsCode()
+getCreatedAt()
}

class Test {
- code
- nhsCode
- createdAt
}

class Sample {}

class SampleStore {}

class Barcode {}

interface ExternalAPI <<interface>> {
+Barcode getBarcode(barcodeNumber)
}

class BarbecueAdapter {
+Barcode getBarcode(barcodeNumber)
}

class BarbecueAPI{
+Barcode createUPCA(data)
}


RecordSamplesUI ..> RecordSamplesController
RecordSamplesUI ..> TestDto
RecordSamplesController .> TestMapper
RecordSamplesController ...> TestStore
RecordSamplesController ...> SampleStore
RecordSamplesController ...> Company
RecordSamplesController ..> Test
TestMapper ..> Test
TestMapper .> TestDto
RecordSamplesController ..> Sample
Company "1" ---> "1" SampleStore : uses >
SampleStore "1" -- "*" Sample : manages >
TestStore "1" -- "*" Test : conducts >
Company "1" --> "1" TestStore : uses >
Sample "1" - "1" Barcode : identified with >
Barcode "*" -- "1" ExternalAPI : generated by >
Sample "*" --- "1" ExternalAPI : makes use of >

class BarbecueAdapter implements ExternalAPI

BarbecueAdapter --> BarbecueAPI





@enduml