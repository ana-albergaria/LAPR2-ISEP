@startuml

title SD_createNHSDailyReport()

participant "nhsReportTask:\nNHSReportTask" as TASK
participant "regressionModel:\nRegressionModel" as REGRESSION_MODEL
participant "dataList:\nList< List<Double> >"
participant "nhsReportStore\n:NHSReportStore" as NHS_REPORT_STORE
participant "covidTestsArray:\ndouble[]" as TESTS_ARRAY
participant "meanAgeArray:\ndouble[]" as MEAN_AGE_ARRAY
participant "observedPositives:\ndouble[]" as OBSERVED_POSITIVES_ARRAY
participant "bestXIndex:\nInteger" as BEST_X
participant "myRegressionModel:\nMyRegressionModel" as MY_REGRESSION_MODEL

activate TASK
TASK -> TASK : regressionModel = getRegressionModel(regressionModelClass)
activate TASK
deactivate TASK

TASK -> TASK : getDataListToFitTheModel()
activate TASK
ref over TASK
SD_getDataListToFitTheModel()
end
TASK --> TASK : dataList
deactivate TASK

TASK -> NHS_REPORT_STORE : covidTestsArray = getDoubleArrayWithData(dataList, 0)
activate NHS_REPORT_STORE
deactivate NHS_REPORT_STORE

TASK -> NHS_REPORT_STORE : meanAgeArray = getDoubleArrayWithData(dataList, 1)
activate NHS_REPORT_STORE
deactivate NHS_REPORT_STORE

TASK -> NHS_REPORT_STORE : observedPositives = getDoubleArrayWithData(dataList, 2)
activate NHS_REPORT_STORE
deactivate NHS_REPORT_STORE

TASK -> NHS_REPORT_STORE : bestXIndex = getBestXIndex(regressionModel, covidTestsArray, meanAgeArray, observedPositives)
activate NHS_REPORT_STORE
deactivate NHS_REPORT_STORE

TASK -> TASK : getMyRegressionModel(regressionModel, bestXIndex, covidTestsArray, meanAgeArray, observedPositives, historicalPoints)
activate TASK
ref over TASK
SD_getMyRegressionModel()
end
TASK --> TASK : myRegressionModel
deactivate TASK








@enduml