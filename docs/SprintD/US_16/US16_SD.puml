@startuml
autonumber
actor "Laboratory Coordinator" as LC

participant ":CompanyPerformanceAnalysisUI" as UI
participant ":CompanyPerformanceAnalysisController" as CTRL
participant ":Company" as CMP
participant ":Test" as TST
participant "testStore\n:TestStore" as TSTSTORE
participant "clientStore\n:ClientStore" as CLTSTORE

activate LC
LC -> UI : asks to see an overview of all the tests performed and \n analyse the overall performance of the company
activate UI
UI --> LC : asks the day or interval of time to analyse \n and asks the algorithm to be used
deactivate UI

loop while the Laboratory Coordinator inserts and selects different data
LC -> UI : inserts and selects the requested data
activate UI

UI -> CTRL : clientInfo = getNumClients()
activate CTRL

CTRL -> CMP : clientStore = getClientStore()
activate CMP
CMP --> CLTSTORE** : create()
deactivate CMP
CTRL -> CLTSTORE : clients = getClients()
activate CLTSTORE
|||
deactivate CLTSTORE
CTRL -> CLTSTORE : clientsNum = size()
activate CLTSTORE
|||
deactivate CLTSTORE

CTRL --> UI : clientInfo
deactivate CTRL

alt Laboratory Coordinator requests analysis for a day

UI -> CTRL : testInfoDay = getTestInfoDay
activate CTRL

CTRL -> CMP : testStore = getTestStore()
activate CMP
CMP --> TSTSTORE** : create()
deactivate CMP
CTRL -> TSTSTORE : numTestsWaitingForResultsDay = getNumTestsWaitingForResultsDay(day)
activate TSTSTORE
|||
deactivate TSTSTORE
CTRL -> TSTSTORE : numTestsWaitingForDiagnosisDay = getNumTestsWaitingForDiagnosisDay(day)
activate TSTSTORE
|||
deactivate TSTSTORE
CTRL -> TSTSTORE : numTestsProcessedInLabDay = getNumTestsProcessedInLabDay(day)
activate TSTSTORE
|||
deactivate TSTSTORE

CTRL --> UI : testInfoDay
deactivate CTRL

else Laboratory Coordinator requests analysis for an interval of days

UI -> CTRL : testInfoInterval = getTestInfoInterval
activate CTRL

CTRL -> TSTSTORE : numTestsWaitingForResultsInterval = getNumTestsWaitingForResultsInterval(beginningDay,endingDay)
activate TSTSTORE
|||
deactivate TSTSTORE
CTRL -> TSTSTORE : numTestsWaitingForDiagnosisInterval = getNumTestsWaitingForDiagnosisInterval(beginningDay,endingDay)
activate TSTSTORE
|||
deactivate TSTSTORE
CTRL -> TSTSTORE : numTestsProcessedInLabInterval = getNumTestsProcessedInLabInterval(beginningDay,endingDay)
activate TSTSTORE
|||
deactivate TSTSTORE

CTRL --> UI : testInfoInterval
deactivate CTRL

UI -> CTRL : worstSubInt = findWorstSubIntWithChosenAlgorithm(beginningDay, endingDay chosenAlgorithm)
activate CTRL
CTRL --> UI : worstSubInt
deactivate CTRL

end

UI --> LC : shows an overview of the clients and tests performed, and \n shows the overall performance of the company
deactivate UI
end

@enduml