@startuml
autonumber
actor "Laboratory Coordinator" as LC

participant ":CompanyPerformanceAnalysisUI" as UI
participant ":CompanyPerformanceAnalysisController" as CTRL
participant ":Company" as CMP
participant ":Test" as TST
participant "testStore\n:TestStore" as TSTSTORE
participant "clientStore\n:ClientStore" as CLTSTORE
participant ":Constants" as CST
participant ":Class" as CL
participant ":SubMaxSumAlgorithms" as SMSA
participant ":Sum" as SUM
participant ":BruteForceAlgorithm" as BFA

activate LC
LC -> UI : asks to see an overview of all the tests performed and \n analyse the overall performance of the company
activate UI
UI --> LC : asks the day or interval of time to analyse \n and asks the algorithm to be used
deactivate UI

loop while the Laboratory Coordinator inserts and selects different data
LC -> UI : inserts and selects the requested data
activate UI

UI -> CTRL : clientInfo = getNumClients()
activate CTRL

CTRL -> CMP : clientStore = getClientStore()
activate CMP
CMP --> CLTSTORE** : create()
deactivate CMP
CTRL -> CLTSTORE : clients = getClients()
activate CLTSTORE
|||
deactivate CLTSTORE
CTRL -> CLTSTORE : clientsNum = size()
activate CLTSTORE
|||
deactivate CLTSTORE

CTRL --> UI : clientInfo
deactivate CTRL

UI -> CTRL : testInfoDayOrInterval = getTestInfoDayOrInterval
activate CTRL

CTRL -> CMP : testStore = getTestStore()
activate CMP
CMP --> TSTSTORE** : create()
deactivate CMP
CTRL -> TSTSTORE : numTestsWaitingForResultsDayOrInterval = getNumTestsWaitingForResultsDayOrInterval(beginningDay,endingDay)
activate TSTSTORE
|||
deactivate TSTSTORE
CTRL -> TSTSTORE : numTestsWaitingForDiagnosisDayOrInterval = getNumTestsWaitingForDiagnosisDayOrInterval(beginningDay,endingDay)
activate TSTSTORE
|||
deactivate TSTSTORE
CTRL -> TSTSTORE : numTestsProcessedInLabDayOrInterval = getNumTestsProcessedInLabDayOrInterval(beginningDay,endingDay)
activate TSTSTORE
|||
deactivate TSTSTORE

CTRL --> UI : testInfoDayOrInterval
deactivate CTRL

UI -> CTRL : worstSubInt = findWorstSubIntWithChosenAlgorithm(beginningDay, endingDay, chosenAlgorithm)
activate CTRL

CTRL -> CTRL : interval = makeIntervalArray(beginningDay, endingDay)
activate CTRL
|||
deactivate CTRL

CTRL -> CTRL : algorithmClass = getChosenAlgorithmAdapter(chosenAlgorithm)
activate CTRL
|||
deactivate CTRL

CTRL -> CL : oClass = forName(algorithmClass)
activate CL
|||
deactivate CL

CTRL -> SMSA : subMaxSumAlgorithm = newInstance()
activate SMSA
|||
deactivate SMSA

alt The chosen algorithm is the Benchmark algorithm

CTRL -> SUM : worstSubInt = findSubMaxSum(interval)
activate SUM
|||
deactivate SUM

else The chosen algorithm is the Brute-force algorithm

CTRL -> BFA : worstSubInt = findSubMaxSum(interval)
activate BFA
|||
deactivate BFA

end

CTRL --> UI : worstSubInt
deactivate CTRL

UI --> LC : shows an overview of the clients and tests performed, and \n shows the overall performance of the company
deactivate UI
end

@enduml