@startuml
'skinparam linetype ortho
hide empty methods
hide empty attributes
'left to right direction
skinparam classAttributeIconSize 0

package Core {

package Domain {

package Model{

class Company {
    -String designation
    -TestStore testStore
    -ClientStore clientStore
    +getTestStore()
    +getClientStore()
}

class BruteForceAlgorithm{
    +Max(seq)
}

}

package Interfaces {

interface SubMaxSumAlgorithms <<interface>> {
    +findSubMaxSum(interval)
}

}

package Store {

class TestStore {
    +getNumTestsWaitingForResultsDayOrInterval(beginningDay, endingDay)
    +getNumTestsWaitingForDiagnosisDayOrInterval(beginningDay, endingDay)
    +getNumTestsProcessedInLabDayOrInterval(beginningDay, endingDay)
    +getNumberOfTestsByIntervalDateOfTestRegistration(beginningDay, endingDay)
    +getNumberOfTestsByIntervalDateOfDiagnosis(beginningDay, endingDay)
}

class ClientStore {
    +getClients()
}

}

package Adapters{

class BenchmarkAlgorithmAdapter{
    +findSubMaxSum(interval)
}

class BruteForceAlgorithmAdapter{
    +findSubMaxSum(interval)
}

}

}

package Controller {

class CompanyPerformanceAnalysisController{
    -Company company
    +getNumClients()
    +getTestInfoPerDay(days)
    +getTestInfoPerWeek(days)
    +getTestInfoPerMonth(days)
    +getTestInfoPerYear(days)
    +getDays(beginningDay, endingDay)
    +makeIntervalArray(days)
    +findWorstSubIntWithChosenAlgorithm(days, chosenAlgorithm)
    +getChosenAlgorithmAdapter(chosenAlgorithm)
}

}

package ThirdParty{

package APIs{

class Sum{
    +Max(seq)
}

}

}

}

package UI {

package GUI {

class CompanyPerformanceAnalysisUI{
}

}

}

@enduml