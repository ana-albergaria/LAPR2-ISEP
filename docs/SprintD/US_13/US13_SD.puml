@startuml

autonumber

actor "Medical Lab Technician" as MLT

participant ":SelectClientUI  " as UI
participant ":ConsultTestsByClient" as CTRL
participant ":Company" as COMPANY
participant "clientStore\n:ClientStore" as CLIENT_STORE
participant "testStore\n:TestStore" as TEST_STORE
participant "selectedTest\n:Test" as SELECTED_TEST
participant ":clientMapper" as CLIENT_MAPPER
participant "sample\n:Sample" as SAMPLE
participant "api\n:ExternalAPI" as API
participant "barcode\n:Barcode" as BARCODE

activate MLT
MLT -> UI : asks to consult the historical tests performed by a particular client
activate UI

UI --> MLT : asks to choose if clients should be ordered by tin or by name
deactivate UI


MLT -> UI : selects requested data
activate UI
UI -> CTRL : clientsListInOrder(sortOption)
activate CTRL

CTRL -> COMPANY : clientStore = getClientStore()
activate COMPANY
deactivate COMPANY

CTRL -> CLIENT_STORE : clientsList  = getClients()
activate CLIENT_STORE
deactivate CLIENT_STORE

CTRL -> CLIENT_MAPPER : clientListDto = clientMapper.toDto(clientList)
activate CLIENT_MAPPER
deactivate CLIENT_MAPPER



deactivate CTRL


UI --> MLT : asks the number of samples to collect
deactivate UI

MLT -> UI : types number
activate UI

UI --> MLT : requests confirmation
deactivate UI

MLT -> UI : confirms the data
activate UI

loop for each Sample to be recorded
UI -> CTRL : createSample()
activate CTRL

CTRL -> CTRL : getBarcode()
activate CTRL
ref over CTRL
SD_getBarcode()
end
CTRL --> CTRL : myBarcode
deactivate CTRL

CTRL -> COMPANY : sampleStore = getSampleStore()
activate COMPANY
COMPANY --> SAMPLE_STORE** : create()
deactivate COMPANY


CTRL -> SAMPLE_STORE : sample = createSample(myBarcode)
activate SAMPLE_STORE

SAMPLE_STORE --> SAMPLE** : create(myBarcode)


deactivate SAMPLE_STORE

/'
SAMPLE -> SAMPLE : api = getExternalAPI()
activate SAMPLE
deactivate SAMPLE
'/


/'
SAMPLE -> API : barcode = getBarcode(barcodeNumber)
activate API
'/
/'
API --> BARCODE** : create(barcodeNumber)

API --> SAMPLE : barcode'/
/'deactivate SAMPLE'/
deactivate COMPANY
deactivate API

CTRL --> UI : result
deactivate CTRL



/'UI --> MLT : shows data and requests confirmation

MLT -> UI : confirms the data'/

/' SAVESAMPLE()
UI -> CTRL : saveSample()
activate CTRL

CTRL -> COMPANY : sampleStore = getSampleStore()
activate COMPANY
deactivate COMPANY

CTRL -> SAMPLE_STORE : saveSample(sample)
activate SAMPLE_STORE


SAMPLE_STORE -> SAMPLE_STORE : validateSample(sample)
activate SAMPLE_STORE
deactivate SAMPLE_STORE

SAMPLE_STORE -> SAMPLE_STORE : addSample(sample)
activate SAMPLE_STORE
deactivate SAMPLE_STORE

CTRL --> UI : result

deactivate SAMPLE_STORE
'/


note over UI, CTRL
The **code** refers to the code of the TestDto
selected by the Medical Lab Technician in step 12.
end note
UI -> CTRL : addSample(code)
activate CTRL




CTRL -> COMPANY : testStore = getTestStore()
activate COMPANY

COMPANY --> TEST_STORE** : create()

deactivate COMPANY

CTRL -> TEST_STORE : getTestByCodeInTestList(code)
activate TEST_STORE
ref over TEST_STORE
SD_getTestByCodeInTestList()
end
TEST_STORE --> CTRL : selectedTest
deactivate TEST_STORE
|||
CTRL -> SELECTED_TEST : addSample(sample)
activate SELECTED_TEST

SELECTED_TEST -> SELECTED_TEST : add(sample)
activate SELECTED_TEST
deactivate SELECTED_TEST

deactivate SELECTED_TEST



/'dentro do método addSample, vai-se verificar se a sample já está lá?'/

deactivate CTRL


UI -> CTRL : saveImageBarcode(code)
activate CTRL

CTRL -> COMPANY : api = getExternalApi()
activate COMPANY
deactivate COMPANY

CTRL -> SAMPLE : myBarcode = getMyBarcode()
activate SAMPLE
deactivate SAMPLE

CTRL -> API : saveImageBarcode(myBarcode, code)
activate API
deactivate API

CTRL --> UI : result

deactivate CTRL

end
deactivate CTRL
|||
UI -> CTRL : addSampleCollectingDateToTest()
activate CTRL

CTRL -> SELECTED_TEST : addSampleCollectingDate()
activate SELECTED_TEST
deactivate SELECTED_TEST
deactivate CTRL



UI --> MLT : informs operation success


/'colocar requests confirmation
e confirms the data em cima'/



@enduml